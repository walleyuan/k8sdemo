
variables:
  imageName: 'k8s-demo'
  K8sPrevisionRequired: false

stages: 
- stage: Preparation
  jobs:
  - job: dockerImage
    steps:
      - task: Docker@2
        displayName: Build and Push an image
        inputs:
              containerRegistry: 'dockerctr'
              repository: $(imageName)
              command: buildAndPush
              Dockerfile: app/Dockerfile
              tags: 1.0

- stage: Initalization
  condition: and(succeeded(), eq(variables.isMain, true))
  jobs:
  - job: RunTerraform

    steps:
      - task: PowerShell@2
        displayName: Terrafom Init
        inputs:
          targetType: 'inline'
          script: |
            # run terrafom 
            terraform init
          workingDirectory: './infra/k8s-cluster'
    
      - task: TerraformTaskV1@0
        displayName: Terraform Validate and Apply
        inputs:
          provider: 'azurerm'
          command: 'apply'
          workingDirectory: '$(System.DefaultWorkingDirectory)/infra/k8s-cluster'
          environmentServiceNameAzureRM: 'PayAsYouGo(1)(f538d4ef-40d6-43bf-859c-e1d3e86f3667)'

- stage: Deploy
  jobs:
   - job: DeployKubernetes
     steps:
     - task: AzureCLI@2
       displayName: connect to azure aks
       inputs:
         azureSubscription: 'PayAsYouGo(1)(f538d4ef-40d6-43bf-859c-e1d3e86f3667)'
         scriptType: 'ps'
         scriptLocation: 'inlineScript'
         inlineScript: 'az aks get-credentials --resource-group K8S --name K8sclt'
