
variables:
  imageName: 'k8s-demo'
  version: '3.0'
  container: 'k8scr01.azurecr.io/k8s-demo:3.0'
  K8sPrevisionRequired: false


stages: 
- stage: Preparation
  jobs:
  - job: dockerImage
    steps:
    - task: Docker@2
      displayName: Build and Push an Docker Image
      inputs:
        containerRegistry: 'Docker Registry Connector'
        repository: $(imageName)
        command: 'buildAndPush'
        Dockerfile: './app/Dockerfile'
        tags: $(version)

- stage: Deployment
  condition: succeeded()
  jobs:
  - job: Deploy
    steps:   
      - task: KubernetesManifest@0
        displayName: Deploy Pods
        inputs:
          action: 'deploy'
          kubernetesServiceConnection: 'Kubernetes Service Connector'
          manifests: './deployment/deploy.yml'
          containers: $(container)
          imagePullSecrets: 'k8sregistrykey'

      - task: Kubernetes@1
        displayName: Deploy nodeport service
        inputs:
          connectionType: 'Kubernetes Service Connection'
          kubernetesServiceEndpoint: 'Kubernetes Service Connector'
          command: 'apply'
          useConfigurationFile: true
          configuration: './services/svc-nodeport.yml'
          secretType: 'dockerRegistry'
          containerRegistryType: 'Azure Container Registry'

      - task: Kubernetes@1
        displayName: Deploy load balance service
        inputs:
          connectionType: 'Kubernetes Service Connection'
          kubernetesServiceEndpoint: 'Kubernetes Service Connector'
          command: 'apply'
          useConfigurationFile: true
          configuration: './services/svc-lb.yml'
          secretType: 'dockerRegistry'
          containerRegistryType: 'Azure Container Registry'